import Head from "next/head";
import type { NextPage, GetStaticProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import ThemeToggle from "~/components/ThemeToggle/ThemeToggle";
import LangDropdown from "~/components/LangDropdown/LangDropdown";
import Footer from "~/components/Footer/Footer";
import Button from "~/components/Button/Button";
import Input from "~/components/Input/Input";
import { useState } from "react";
import { Heart } from "@phosphor-icons/react";
import StepCard from "~/components/Cards/StepCard/StepCard";

const Home: NextPage = () => {
  const { t } = useTranslation("common");

  const [value1, setValue1] = useState("");
  const [value2, setValue2] = useState("");
  const [value3, setValue3] = useState("");
  const [value4, setValue4] = useState("");
  const [value5, setValue5] = useState("");
  const [value6, setValue6] = useState("");
  const [value7, setValue7] = useState("");
  const [value8, setValue8] = useState("");

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="font-montserrat text-xl font-bold">GiftstormingAi</div>
        <div className="flex justify-end gap-2 p-8">
          <LangDropdown />
          <ThemeToggle />
        </div>
        <div className="flex flex-col items-center justify-center gap-2 p-4">
          <div>{t("testi18n")}</div>
          <div>
            <Button variant="text" size="sm">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="text" size="md">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="text" size="lg">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="text" size="sm" endIcon={<Heart />}>
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="outlined" size="sm">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="outlined" size="md">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="outlined" size="lg">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="outlined" size="sm" endIcon={<Heart />}>
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="contained" size="sm">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="contained" size="md">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="contained" size="lg">
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="contained" size="sm" startIcon={<Heart />}>
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="text" size="sm" disabled>
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="outlined" size="sm" disabled>
              Get Early Access
            </Button>
          </div>

          <div>
            <Button variant="contained" size="sm" disabled>
              Get Early Access
            </Button>
          </div>

          <Button variant="text" size="sm" fullWidth>
            Get Early Access
          </Button>
          <Button variant="outlined" size="sm" fullWidth>
            Get Early Access
          </Button>
          <Button variant="contained" size="sm" fullWidth>
            Get Early Access
          </Button>
        </div>
        <div className="flex flex-col items-center justify-center gap-2 p-4">
          <Input
            value={value1}
            onChange={(e) => setValue1(e.target.value)}
            placeholder="Text Small"
          />

          <Input
            type="email"
            value={value2}
            onChange={(e) => setValue2(e.target.value)}
            placeholder="Enter your email"
          />

          <Input
            type="password"
            value={value3}
            onChange={(e) => setValue3(e.target.value)}
            placeholder="Password input"
          />

          <Input
            type="number"
            value={value4}
            onChange={(e) => setValue4(e.target.value)}
            placeholder="Number input"
          />

          <Input
            value={value5}
            onChange={(e) => setValue5(e.target.value)}
            placeholder="Text with Start Icon"
            startIcon={<Heart />}
          />

          <Input
            value={value6}
            onChange={(e) => setValue6(e.target.value)}
            placeholder="Text with End Icon"
            endIcon={<Heart />}
          />

          <Input
            value={value7}
            onChange={(e) => setValue7(e.target.value)}
            placeholder="Password with Start and End Icons"
            type="password"
            startIcon={<Heart weight="fill" />}
            endIcon={<Heart />}
          />

          <Input
            value={value8}
            onChange={(e) => setValue8(e.target.value)}
            placeholder="Disabled Input"
            disabled
          />
        </div>
        <div className="flex flex-col gap-6 p-6">
          <StepCard
            step={1}
            title="Step One Title"
            description="Step one description."
          />
          <StepCard
            step={2}
            title="Step Two Title"
            description="Step two description."
          />
        </div>
        <Footer />
      </main>
    </>
  );
};

export const getStaticProps: GetStaticProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale || "en", ["common"])),
  },
});

export default Home;
